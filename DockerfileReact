# Base image, even version for production
FROM node:20-alpine3.17 AS builder

# Set the working directory
WORKDIR /app

# Copy the package.json and yarn.lock files
COPY ./watch-store-front-end/package.json package.json
COPY ./watch-store-front-end/yarn.lock yarn.lock

# Install dependencies using yarn
RUN yarn install --frozen-lockfile

# Copy the rest of the app's code excluding node_modules
COPY ./watch-store-front-end/ .

# Build the React app in production mode
RUN yarn build

# Production-ready image
FROM nginx:alpine

# Copy the built app from the builder stage
COPY --from=builder /app/build /usr/share/nginx/html

EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]

# Commands to build, tag, and push the image to DockerHub
# docker build -t watch-store-front-end:1.0.0 -f Dockerfile .
# docker login
# Create repository sunlight4d/watch-store-front-end:1.0.0 on DockerHub
# docker tag watch-store-front-end:1.0.0 sunlight4d/watch-store-front-end:1.0.0
# docker push sunlight4d/watch-store-front-end:1.0.0
